{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/kpi.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction KpiOverviewComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"pre\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.rawKpiJson);\n  }\n}\nfunction KpiOverviewComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"h2\");\n    i0.ɵɵtext(3, \"Deployment Frequency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"canvas\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 29)(6, \"h2\");\n    i0.ɵɵtext(7, \"Change Failure Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"canvas\", 31);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction KpiOverviewComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"h3\");\n    i0.ɵɵtext(2, \"Latest Metrics\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 33)(4, \"span\");\n    i0.ɵɵtext(5, \"CI/CD Pipeline Coverage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 33)(9, \"span\");\n    i0.ɵɵtext(10, \"Test Automation Coverage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 33)(14, \"span\");\n    i0.ɵɵtext(15, \"MTTR:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 33)(19, \"span\");\n    i0.ɵɵtext(20, \"DevOps Score:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const kpi_r2 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.cicdPipeline, \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.testAutomation, \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.mttr, \" hours\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(kpi_r2.devOpsScore);\n  }\n}\nfunction KpiOverviewComponent_div_31_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.value);\n  }\n}\nfunction KpiOverviewComponent_div_31_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.value);\n  }\n}\nfunction KpiOverviewComponent_div_31_tr_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.value);\n  }\n}\nfunction KpiOverviewComponent_div_31_tr_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r7.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r7.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r7.value);\n  }\n}\nfunction KpiOverviewComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"h2\");\n    i0.ɵɵtext(2, \"Trends by Team & Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 35)(4, \"div\", 36)(5, \"h3\");\n    i0.ɵɵtext(6, \"Deployment Frequency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.deploymentFilter, $event) || (ctx_r0.deploymentFilter = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_7_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDeploymentFilterChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"table\", 23)(9, \"thead\")(10, \"tr\")(11, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_11_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setDeploymentSort(\"team\"));\n    });\n    i0.ɵɵtext(12, \"Team\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setDeploymentSort(\"product\"));\n    });\n    i0.ɵɵtext(14, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_15_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setDeploymentSort(\"value\"));\n    });\n    i0.ɵɵtext(16, \"Value\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, KpiOverviewComponent_div_31_tr_18_Template, 7, 3, \"tr\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 36)(20, \"h3\");\n    i0.ɵɵtext(21, \"Cycle Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.cycleFilter, $event) || (ctx_r0.cycleFilter = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_22_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onCycleFilterChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"table\", 23)(24, \"thead\")(25, \"tr\")(26, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_26_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setCycleSort(\"team\"));\n    });\n    i0.ɵɵtext(27, \"Team\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_28_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setCycleSort(\"product\"));\n    });\n    i0.ɵɵtext(29, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_30_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setCycleSort(\"value\"));\n    });\n    i0.ɵɵtext(31, \"Value\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"tbody\");\n    i0.ɵɵtemplate(33, KpiOverviewComponent_div_31_tr_33_Template, 7, 3, \"tr\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"div\", 36)(35, \"h3\");\n    i0.ɵɵtext(36, \"MTTR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"input\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_37_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.mttrFilter, $event) || (ctx_r0.mttrFilter = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_37_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onMttrFilterChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"table\", 23)(39, \"thead\")(40, \"tr\")(41, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_41_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setMttrSort(\"team\"));\n    });\n    i0.ɵɵtext(42, \"Team\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_43_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setMttrSort(\"product\"));\n    });\n    i0.ɵɵtext(44, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_45_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setMttrSort(\"value\"));\n    });\n    i0.ɵɵtext(46, \"Value\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(47, \"tbody\");\n    i0.ɵɵtemplate(48, KpiOverviewComponent_div_31_tr_48_Template, 7, 3, \"tr\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"div\", 36)(50, \"h3\");\n    i0.ɵɵtext(51, \"Test Automation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"input\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_52_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.testAutoFilter, $event) || (ctx_r0.testAutoFilter = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"ngModelChange\", function KpiOverviewComponent_div_31_Template_input_ngModelChange_52_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onTestAutoFilterChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"table\", 23)(54, \"thead\")(55, \"tr\")(56, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_56_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setTestAutoSort(\"team\"));\n    });\n    i0.ɵɵtext(57, \"Team\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_58_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setTestAutoSort(\"product\"));\n    });\n    i0.ɵɵtext(59, \"Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"th\", 38);\n    i0.ɵɵlistener(\"click\", function KpiOverviewComponent_div_31_Template_th_click_60_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.setTestAutoSort(\"value\"));\n    });\n    i0.ɵɵtext(61, \"Value\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(62, \"tbody\");\n    i0.ɵɵtemplate(63, KpiOverviewComponent_div_31_tr_63_Template, 7, 3, \"tr\", 26);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.deploymentFilter);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.deploymentFrequencyTrend);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.cycleFilter);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cycleTimeTrend);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.mttrFilter);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.mttrTrend);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.testAutoFilter);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.testAutomationTrend);\n  }\n}\nfunction KpiOverviewComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const period_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r8);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(period_r8);\n  }\n}\nfunction KpiOverviewComponent_tr_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 25);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 25);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 25);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 25);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 25);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 25);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\", 25);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 25);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\", 25);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\", 25);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\", 25);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const kpi_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.nwb);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.tribe);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.quarter);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.deploymentFrequency);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.cycleTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.changeFailureRate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.mttr);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.cicdPipeline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.testAutomation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r9.devOpsScore);\n  }\n}\nexport class KpiOverviewComponent {\n  get rawKpiJson() {\n    return JSON.stringify(this.kpis, null, 2);\n  }\n  get periods() {\n    return [...new Set(this.kpis.map(kpi => `${kpi.year} ${kpi.quarter}`))];\n  }\n  get filteredKpis() {\n    if (!this.selectedPeriod) return this.kpis;\n    const [year, quarter] = this.selectedPeriod.split(' ');\n    return this.kpis.filter(kpi => String(kpi.year) === year && String(kpi.quarter) === quarter);\n  }\n  get totalTeams() {\n    // Unique teams with a non-empty name in the filtered set\n    return new Set(this.filteredKpis.map(kpi => kpi.team).filter(t => t)).size;\n  }\n  getTrendValue(row, key) {\n    if (key === 'team') return row.team;\n    if (key === 'product') return row.product;\n    return row.value;\n  }\n  updateTrends() {\n    // Deployment Frequency\n    let deploymentRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.deploymentFrequency\n    }));\n    if (this.deploymentFilter) {\n      deploymentRows = deploymentRows.filter(row => row.team?.toLowerCase().includes(this.deploymentFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.deploymentFilter.toLowerCase()));\n    }\n    deploymentRows = deploymentRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.deploymentSortKey);\n      const valB = this.getTrendValue(b, this.deploymentSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.deploymentSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.deploymentSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.deploymentFrequencyTrend = deploymentRows;\n    // Cycle Time\n    let cycleRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.cycleTime\n    }));\n    if (this.cycleFilter) {\n      cycleRows = cycleRows.filter(row => row.team?.toLowerCase().includes(this.cycleFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.cycleFilter.toLowerCase()));\n    }\n    cycleRows = cycleRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.cycleSortKey);\n      const valB = this.getTrendValue(b, this.cycleSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.cycleSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.cycleSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.cycleTimeTrend = cycleRows;\n    // MTTR\n    let mttrRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.mttr\n    }));\n    if (this.mttrFilter) {\n      mttrRows = mttrRows.filter(row => row.team?.toLowerCase().includes(this.mttrFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.mttrFilter.toLowerCase()));\n    }\n    mttrRows = mttrRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.mttrSortKey);\n      const valB = this.getTrendValue(b, this.mttrSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.mttrSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.mttrSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.mttrTrend = mttrRows;\n    // Test Automation\n    let testAutoRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.testAutomation\n    }));\n    if (this.testAutoFilter) {\n      testAutoRows = testAutoRows.filter(row => row.team?.toLowerCase().includes(this.testAutoFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.testAutoFilter.toLowerCase()));\n    }\n    testAutoRows = testAutoRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.testAutoSortKey);\n      const valB = this.getTrendValue(b, this.testAutoSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.testAutoSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.testAutoSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.testAutomationTrend = testAutoRows;\n  }\n  // --- Methods to update sort and filter ---\n  setDeploymentSort(key) {\n    if (this.deploymentSortKey === key) {\n      this.deploymentSortDir = this.deploymentSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.deploymentSortKey = key;\n      this.deploymentSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setCycleSort(key) {\n    if (this.cycleSortKey === key) {\n      this.cycleSortDir = this.cycleSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.cycleSortKey = key;\n      this.cycleSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setMttrSort(key) {\n    if (this.mttrSortKey === key) {\n      this.mttrSortDir = this.mttrSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.mttrSortKey = key;\n      this.mttrSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setTestAutoSort(key) {\n    if (this.testAutoSortKey === key) {\n      this.testAutoSortDir = this.testAutoSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.testAutoSortKey = key;\n      this.testAutoSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  constructor(kpiService) {\n    this.kpiService = kpiService;\n    this.showRawData = false;\n    this.kpis = [];\n    this.selectedNWB = 'RBRO';\n    this.selectedPeriod = '';\n    // --- Sorting and Filtering State ---\n    this.deploymentSortKey = 'value';\n    this.deploymentSortDir = 'desc';\n    this.deploymentFilter = '';\n    this.cycleSortKey = 'value';\n    this.cycleSortDir = 'desc';\n    this.cycleFilter = '';\n    this.mttrSortKey = 'value';\n    this.mttrSortDir = 'desc';\n    this.mttrFilter = '';\n    this.testAutoSortKey = 'value';\n    this.testAutoSortDir = 'desc';\n    this.testAutoFilter = '';\n    // --- Trend Table Data (arrays, not getters) ---\n    this.deploymentFrequencyTrend = [];\n    this.cycleTimeTrend = [];\n    this.mttrTrend = [];\n    this.testAutomationTrend = [];\n    this.selectedTab = 'overview';\n  }\n  ngOnInit() {\n    this.loadKPIs();\n  }\n  // Update trends after KPIs load\n  loadKPIs() {\n    this.kpiService.getKPIsByNWB(this.selectedNWB).subscribe(data => {\n      // Parse all numeric fields as numbers\n      this.kpis = data.map(kpi => ({\n        ...kpi,\n        deploymentFrequency: Number(kpi.deploymentFrequency),\n        cycleTime: Number(kpi.cycleTime),\n        changeFailureRate: Number(kpi.changeFailureRate),\n        mttr: Number(kpi.mttr),\n        cicdPipeline: Number(kpi.cicdPipeline),\n        testAutomation: Number(kpi.testAutomation),\n        devOpsScore: Number(kpi.devOpsScore)\n      }));\n      this.updateTrends();\n      this.updateCharts();\n    });\n  }\n  // Update trends after period change\n  onPeriodChange() {\n    this.updateTrends();\n  }\n  // Filtering handlers for each trend table\n  onDeploymentFilterChange() {\n    this.updateTrends();\n  }\n  onCycleFilterChange() {\n    this.updateTrends();\n  }\n  onMttrFilterChange() {\n    this.updateTrends();\n  }\n  onTestAutoFilterChange() {\n    this.updateTrends();\n  }\n  updateCharts() {\n    const quarters = [...new Set(this.kpis.map(kpi => `${kpi.quarter} ${kpi.year}`))];\n    const deploymentData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      // Only use valid numbers for deploymentFrequency\n      const valid = qKpis.map(kpi => Number(kpi.deploymentFrequency)).filter(val => Number.isFinite(val));\n      return valid.length > 0 ? valid.reduce((sum, val) => sum + val, 0) / valid.length : 0;\n    });\n    console.log('Quarters:', quarters);\n    console.log('Deployment Data:', deploymentData);\n    console.log('KPIs:', this.kpis);\n    const failureData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.changeFailureRate, 0) / qKpis.length;\n    });\n    this.createDeploymentChart(quarters, deploymentData);\n    this.createFailureRateChart(quarters, failureData);\n  }\n  createDeploymentChart(labels, data) {\n    if (this.deploymentChart) {\n      this.deploymentChart.destroy();\n    }\n    this.deploymentChart = new Chart('deploymentChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Deployment Frequency',\n          data,\n          borderColor: '#4CAF50',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  createFailureRateChart(labels, data) {\n    if (this.failureRateChart) {\n      this.failureRateChart.destroy();\n    }\n    this.failureRateChart = new Chart('failureRateChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Change Failure Rate',\n          data,\n          borderColor: '#F44336',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 100\n          }\n        }\n      }\n    });\n  }\n  onNWBChange(nwb) {\n    this.selectedNWB = nwb;\n    this.loadKPIs();\n  }\n  static {\n    this.ɵfac = function KpiOverviewComponent_Factory(t) {\n      return new (t || KpiOverviewComponent)(i0.ɵɵdirectiveInject(i1.KpiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: KpiOverviewComponent,\n      selectors: [[\"app-kpi-overview\"]],\n      decls: 74,\n      vars: 17,\n      consts: [[1, \"kpi-overview\"], [1, \"tab-nav\", 2, \"margin-bottom\", \"24px\", \"display\", \"flex\", \"gap\", \"16px\"], [3, \"click\"], [1, \"header\"], [1, \"summary-metrics\", 2, \"margin-bottom\", \"24px\"], [2, \"margin-bottom\", \"10px\", 3, \"click\"], [\"style\", \"max-height: 300px; overflow: auto; background: #f7f7f7; border: 1px solid #ccc; padding: 8px; margin-bottom: 20px;\", 4, \"ngIf\"], [1, \"nwb-selector\"], [\"for\", \"nwb\"], [\"id\", \"nwb\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"RBRO\"], [\"value\", \"RBBH\"], [\"class\", \"charts-container\", 4, \"ngIf\"], [1, \"kpi-metrics\"], [\"class\", \"metric-card\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"trend-tables\", \"style\", \"margin-top: 32px;\", 4, \"ngIf\"], [1, \"all-kpis-table\", 2, \"margin-top\", \"40px\"], [2, \"margin-bottom\", \"16px\"], [\"for\", \"period\"], [\"id\", \"period\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"overflow-x\", \"auto\"], [2, \"width\", \"100%\", \"border-collapse\", \"collapse\"], [2, \"background\", \"#f0f0f0\"], [2, \"border\", \"1px solid #ccc\", \"padding\", \"4px\"], [4, \"ngFor\", \"ngForOf\"], [2, \"max-height\", \"300px\", \"overflow\", \"auto\", \"background\", \"#f7f7f7\", \"border\", \"1px solid #ccc\", \"padding\", \"8px\", \"margin-bottom\", \"20px\"], [1, \"charts-container\"], [1, \"chart-wrapper\"], [\"id\", \"deploymentChart\"], [\"id\", \"failureRateChart\"], [1, \"metric-card\"], [1, \"metric\"], [1, \"trend-tables\", 2, \"margin-top\", \"32px\"], [1, \"trend-table-wrapper\", 2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"32px\"], [1, \"trend-table\", 2, \"flex\", \"1 1 300px\", \"min-width\", \"260px\"], [\"type\", \"text\", \"placeholder\", \"Filter by team or product\", 2, \"margin-bottom\", \"6px\", \"width\", \"100%\", 3, \"ngModelChange\", \"ngModel\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [3, \"value\"]],\n      template: function KpiOverviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_button_click_2_listener() {\n            return ctx.selectedTab = \"overview\";\n          });\n          i0.ɵɵtext(3, \"Overview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_button_click_4_listener() {\n            return ctx.selectedTab = \"trends\";\n          });\n          i0.ɵɵtext(5, \"Trends by Team & Product\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"h2\");\n          i0.ɵɵtext(9, \"Summary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\");\n          i0.ɵɵtext(11, \"Total reporting teams for selected period: \");\n          i0.ɵɵelementStart(12, \"strong\");\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_button_click_14_listener() {\n            return ctx.showRawData = !ctx.showRawData;\n          });\n          i0.ɵɵtext(15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, KpiOverviewComponent_div_16_Template, 3, 1, \"div\", 6);\n          i0.ɵɵelementStart(17, \"h1\");\n          i0.ɵɵtext(18, \"Engineering KPIs Overview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 8);\n          i0.ɵɵtext(21, \"Network Bank:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"select\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_select_ngModelChange_22_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedNWB, $event) || (ctx.selectedNWB = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function KpiOverviewComponent_Template_select_change_22_listener() {\n            return ctx.onNWBChange(ctx.selectedNWB);\n          });\n          i0.ɵɵelementStart(23, \"option\", 10);\n          i0.ɵɵtext(24, \"RBRO\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"option\", 11);\n          i0.ɵɵtext(26, \"RBBH\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(27, KpiOverviewComponent_div_27_Template, 9, 0, \"div\", 12);\n          i0.ɵɵelementStart(28, \"div\", 13);\n          i0.ɵɵtemplate(29, KpiOverviewComponent_div_29_Template, 23, 4, \"div\", 14);\n          i0.ɵɵpipe(30, \"slice\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(31, KpiOverviewComponent_div_31_Template, 64, 8, \"div\", 15);\n          i0.ɵɵelementStart(32, \"div\", 16)(33, \"h2\");\n          i0.ɵɵtext(34, \"All KPIs (Raw Data Table)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"div\", 17)(36, \"label\", 18);\n          i0.ɵɵtext(37, \"Filter by Period (Year + Quarter):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"select\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_select_ngModelChange_38_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedPeriod, $event) || (ctx.selectedPeriod = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function KpiOverviewComponent_Template_select_change_38_listener() {\n            return ctx.onPeriodChange();\n          });\n          i0.ɵɵelementStart(39, \"option\", 20);\n          i0.ɵɵtext(40, \"All Periods\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(41, KpiOverviewComponent_option_41_Template, 2, 2, \"option\", 21);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 22)(43, \"table\", 23)(44, \"thead\")(45, \"tr\", 24)(46, \"th\", 25);\n          i0.ɵɵtext(47, \"NWB\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"th\", 25);\n          i0.ɵɵtext(49, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"th\", 25);\n          i0.ɵɵtext(51, \"Tribe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"th\", 25);\n          i0.ɵɵtext(53, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"th\", 25);\n          i0.ɵɵtext(55, \"Quarter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"th\", 25);\n          i0.ɵɵtext(57, \"Year\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"th\", 25);\n          i0.ɵɵtext(59, \"Deployment Frequency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"th\", 25);\n          i0.ɵɵtext(61, \"Cycle Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(62, \"th\", 25);\n          i0.ɵɵtext(63, \"Change Failure Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(64, \"th\", 25);\n          i0.ɵɵtext(65, \"MTTR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(66, \"th\", 25);\n          i0.ɵɵtext(67, \"CI/CD Pipeline\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(68, \"th\", 25);\n          i0.ɵɵtext(69, \"Test Automation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(70, \"th\", 25);\n          i0.ɵɵtext(71, \"DevOps Score\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(72, \"tbody\");\n          i0.ɵɵtemplate(73, KpiOverviewComponent_tr_73_Template, 27, 13, \"tr\", 26);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTab === \"overview\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"active\", ctx.selectedTab === \"trends\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.totalTeams);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showRawData ? \"Hide\" : \"Show\", \" Raw KPI Data \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showRawData);\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedNWB);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === \"overview\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(30, 14, ctx.kpis, -1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedTab === \"trends\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedPeriod);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.periods);\n          i0.ɵɵadvance(32);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredKpis);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.SlicePipe],\n      styles: [\".kpi-overview[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  max-width: 1200px;\\n  margin: 0 auto;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 30px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #333;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .nwb-selector[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .nwb-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border-radius: 4px;\\n  border: 1px solid #ddd;\\n  font-size: 16px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 20px;\\n  margin-bottom: 30px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n  color: #333;\\n  font-size: 1.2em;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 300px !important;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n  color: #333;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 10px 0;\\n  border-bottom: 1px solid #eee;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child {\\n  color: #666;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child {\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\n@media (max-width: 768px) {\\n  .kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n  .kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 15px;\\n    text-align: center;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9rcGktb3ZlcnZpZXcva3BpLW92ZXJ2aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDSTtFQUNFLFNBQUE7RUFDQSxXQUFBO0FBQ047QUFFSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7QUFBTjtBQUVNO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0FBQVI7QUFLRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtBQUhKO0FBS0k7RUFDRSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLHdDQUFBO0FBSE47QUFLTTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUhSO0FBTU07RUFDRSxzQkFBQTtFQUNBLHdCQUFBO0FBSlI7QUFVSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFSTjtBQVVNO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQVJSO0FBV007RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxlQUFBO0VBQ0EsNkJBQUE7QUFUUjtBQVdRO0VBQ0UsbUJBQUE7QUFUVjtBQVlRO0VBQ0UsV0FBQTtBQVZWO0FBYVE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7QUFYVjs7QUFrQkE7RUFFSTtJQUNFLDBCQUFBO0VBaEJKO0VBbUJFO0lBQ0Usc0JBQUE7SUFDQSxTQUFBO0lBQ0Esa0JBQUE7RUFqQko7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5rcGktb3ZlcnZpZXcge1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgLmhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuXG4gICAgaDEge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgfVxuXG4gICAgLm53Yi1zZWxlY3RvciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogMTBweDtcblxuICAgICAgc2VsZWN0IHtcbiAgICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuY2hhcnRzLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgZ2FwOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG5cbiAgICAuY2hhcnQtd3JhcHBlciB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuXG4gICAgICBoMiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgfVxuXG4gICAgICBjYW52YXMge1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IDMwMHB4ICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmtwaS1tZXRyaWNzIHtcbiAgICAubWV0cmljLWNhcmQge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcblxuICAgICAgaDMge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgIH1cblxuICAgICAgLm1ldHJpYyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgcGFkZGluZzogMTBweCAwO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICBzcGFuOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5rcGktb3ZlcnZpZXcge1xuICAgIC5jaGFydHMtY29udGFpbmVyIHtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIH1cblxuICAgIC5oZWFkZXIge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGdhcDogMTVweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","rawKpiJson","ɵɵelement","ɵɵtextInterpolate1","kpi_r2","cicdPipeline","testAutomation","mttr","devOpsScore","row_r4","team","product","value","row_r5","row_r6","row_r7","ɵɵtwoWayListener","KpiOverviewComponent_div_31_Template_input_ngModelChange_7_listener","$event","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵtwoWayBindingSet","deploymentFilter","ɵɵresetView","ɵɵlistener","onDeploymentFilterChange","KpiOverviewComponent_div_31_Template_th_click_11_listener","setDeploymentSort","KpiOverviewComponent_div_31_Template_th_click_13_listener","KpiOverviewComponent_div_31_Template_th_click_15_listener","ɵɵtemplate","KpiOverviewComponent_div_31_tr_18_Template","KpiOverviewComponent_div_31_Template_input_ngModelChange_22_listener","cycleFilter","onCycleFilterChange","KpiOverviewComponent_div_31_Template_th_click_26_listener","setCycleSort","KpiOverviewComponent_div_31_Template_th_click_28_listener","KpiOverviewComponent_div_31_Template_th_click_30_listener","KpiOverviewComponent_div_31_tr_33_Template","KpiOverviewComponent_div_31_Template_input_ngModelChange_37_listener","mttrFilter","onMttrFilterChange","KpiOverviewComponent_div_31_Template_th_click_41_listener","setMttrSort","KpiOverviewComponent_div_31_Template_th_click_43_listener","KpiOverviewComponent_div_31_Template_th_click_45_listener","KpiOverviewComponent_div_31_tr_48_Template","KpiOverviewComponent_div_31_Template_input_ngModelChange_52_listener","testAutoFilter","onTestAutoFilterChange","KpiOverviewComponent_div_31_Template_th_click_56_listener","setTestAutoSort","KpiOverviewComponent_div_31_Template_th_click_58_listener","KpiOverviewComponent_div_31_Template_th_click_60_listener","KpiOverviewComponent_div_31_tr_63_Template","ɵɵtwoWayProperty","ɵɵproperty","deploymentFrequencyTrend","cycleTimeTrend","mttrTrend","testAutomationTrend","period_r8","kpi_r9","nwb","tribe","quarter","year","deploymentFrequency","cycleTime","changeFailureRate","KpiOverviewComponent","JSON","stringify","kpis","periods","Set","map","kpi","filteredKpis","selectedPeriod","split","filter","String","totalTeams","t","size","getTrendValue","row","key","updateTrends","deploymentRows","toLowerCase","includes","sort","a","b","valA","deploymentSortKey","valB","deploymentSortDir","cycleRows","cycleSortKey","cycleSortDir","mttrRows","mttrSortKey","mttrSortDir","testAutoRows","testAutoSortKey","testAutoSortDir","constructor","kpiService","showRawData","selectedNWB","selectedTab","ngOnInit","loadKPIs","getKPIsByNWB","subscribe","data","Number","updateCharts","onPeriodChange","quarters","deploymentData","q","qKpis","valid","val","isFinite","length","reduce","sum","console","log","failureData","createDeploymentChart","createFailureRateChart","labels","deploymentChart","destroy","type","datasets","label","borderColor","tension","options","responsive","scales","y","beginAtZero","failureRateChart","max","onNWBChange","ɵɵdirectiveInject","i1","KpiService","selectors","decls","vars","consts","template","KpiOverviewComponent_Template","rf","ctx","KpiOverviewComponent_Template_button_click_2_listener","KpiOverviewComponent_Template_button_click_4_listener","KpiOverviewComponent_Template_button_click_14_listener","KpiOverviewComponent_div_16_Template","KpiOverviewComponent_Template_select_ngModelChange_22_listener","KpiOverviewComponent_Template_select_change_22_listener","KpiOverviewComponent_div_27_Template","KpiOverviewComponent_div_29_Template","KpiOverviewComponent_div_31_Template","KpiOverviewComponent_Template_select_ngModelChange_38_listener","KpiOverviewComponent_Template_select_change_38_listener","KpiOverviewComponent_option_41_Template","KpiOverviewComponent_tr_73_Template","ɵɵclassProp","ɵɵpipeBind2"],"sources":["D:\\workspace\\eng-dashboard\\frontend\\src\\app\\components\\kpi-overview\\kpi-overview.component.ts","D:\\workspace\\eng-dashboard\\frontend\\src\\app\\components\\kpi-overview\\kpi-overview.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { KpiService } from '../../services/kpi.service';\nimport { KPI } from '../../models/kpi.model';\nimport { Chart } from 'chart.js/auto';\n\ntype TrendRow = { team: string; product: string; value: number };\n\n@Component({\n  selector: 'app-kpi-overview',\n  templateUrl: './kpi-overview.component.html',\n  styleUrls: ['./kpi-overview.component.scss']\n})\nexport class KpiOverviewComponent implements OnInit {\n  showRawData: boolean = false;\n  get rawKpiJson(): string {\n    return JSON.stringify(this.kpis, null, 2);\n  }\n  kpis: KPI[] = [];\n  selectedNWB: string = 'RBRO';\n  selectedPeriod: string = '';\n  deploymentChart: any;\n  failureRateChart: any;\n\n  get periods(): string[] {\n    return [...new Set(this.kpis.map(kpi => `${kpi.year} ${kpi.quarter}`))];\n  }\n\n  get filteredKpis(): KPI[] {\n    if (!this.selectedPeriod) return this.kpis;\n    const [year, quarter] = this.selectedPeriod.split(' ');\n    return this.kpis.filter(kpi => String(kpi.year) === year && String(kpi.quarter) === quarter);\n  }\n\n  get totalTeams(): number {\n    // Unique teams with a non-empty name in the filtered set\n    return new Set(this.filteredKpis.map(kpi => kpi.team).filter(t => t)).size;\n  }\n\n  // --- Sorting and Filtering State ---\n  deploymentSortKey: string = 'value';\n  deploymentSortDir: 'asc' | 'desc' = 'desc';\n  deploymentFilter: string = '';\n\n  cycleSortKey: string = 'value';\n  cycleSortDir: 'asc' | 'desc' = 'desc';\n  cycleFilter: string = '';\n\n  mttrSortKey: string = 'value';\n  mttrSortDir: 'asc' | 'desc' = 'desc';\n  mttrFilter: string = '';\n\n  testAutoSortKey: string = 'value';\n  testAutoSortDir: 'asc' | 'desc' = 'desc';\n  testAutoFilter: string = '';\n\n  // --- Trend Table Data (arrays, not getters) ---\n  deploymentFrequencyTrend: TrendRow[] = [];\n  cycleTimeTrend: TrendRow[] = [];\n  mttrTrend: TrendRow[] = [];\n  testAutomationTrend: TrendRow[] = [];\n\n  private getTrendValue(row: TrendRow, key: string): string | number {\n    if (key === 'team') return row.team;\n    if (key === 'product') return row.product;\n    return row.value;\n  }\n\n  updateTrends() {\n    // Deployment Frequency\n    let deploymentRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.deploymentFrequency\n    }));\n    if (this.deploymentFilter) {\n      deploymentRows = deploymentRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.deploymentFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.deploymentFilter.toLowerCase()))\n      );\n    }\n    deploymentRows = deploymentRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.deploymentSortKey);\n      const valB = this.getTrendValue(b, this.deploymentSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.deploymentSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.deploymentSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.deploymentFrequencyTrend = deploymentRows;\n\n    // Cycle Time\n    let cycleRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.cycleTime\n    }));\n    if (this.cycleFilter) {\n      cycleRows = cycleRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.cycleFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.cycleFilter.toLowerCase()))\n      );\n    }\n    cycleRows = cycleRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.cycleSortKey);\n      const valB = this.getTrendValue(b, this.cycleSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.cycleSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.cycleSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.cycleTimeTrend = cycleRows;\n\n    // MTTR\n    let mttrRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.mttr\n    }));\n    if (this.mttrFilter) {\n      mttrRows = mttrRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.mttrFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.mttrFilter.toLowerCase()))\n      );\n    }\n    mttrRows = mttrRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.mttrSortKey);\n      const valB = this.getTrendValue(b, this.mttrSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.mttrSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.mttrSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.mttrTrend = mttrRows;\n\n    // Test Automation\n    let testAutoRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.testAutomation\n    }));\n    if (this.testAutoFilter) {\n      testAutoRows = testAutoRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.testAutoFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.testAutoFilter.toLowerCase()))\n      );\n    }\n    testAutoRows = testAutoRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.testAutoSortKey);\n      const valB = this.getTrendValue(b, this.testAutoSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.testAutoSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.testAutoSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.testAutomationTrend = testAutoRows;\n  }\n\n  // --- Methods to update sort and filter ---\n  setDeploymentSort(key: string) {\n    if (this.deploymentSortKey === key) {\n      this.deploymentSortDir = this.deploymentSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.deploymentSortKey = key;\n      this.deploymentSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setCycleSort(key: string) {\n    if (this.cycleSortKey === key) {\n      this.cycleSortDir = this.cycleSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.cycleSortKey = key;\n      this.cycleSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setMttrSort(key: string) {\n    if (this.mttrSortKey === key) {\n      this.mttrSortDir = this.mttrSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.mttrSortKey = key;\n      this.mttrSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setTestAutoSort(key: string) {\n    if (this.testAutoSortKey === key) {\n      this.testAutoSortDir = this.testAutoSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.testAutoSortKey = key;\n      this.testAutoSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n\n  selectedTab: 'overview' | 'trends' = 'overview';\n\n  constructor(private kpiService: KpiService) {}\n\n  ngOnInit(): void {\n    this.loadKPIs();\n  }\n\n  // Update trends after KPIs load\n  loadKPIs(): void {\n    this.kpiService.getKPIsByNWB(this.selectedNWB).subscribe(data => {\n      // Parse all numeric fields as numbers\n      this.kpis = data.map(kpi => ({\n        ...kpi,\n        deploymentFrequency: Number(kpi.deploymentFrequency),\n        cycleTime: Number(kpi.cycleTime),\n        changeFailureRate: Number(kpi.changeFailureRate),\n        mttr: Number(kpi.mttr),\n        cicdPipeline: Number(kpi.cicdPipeline),\n        testAutomation: Number(kpi.testAutomation),\n        devOpsScore: Number(kpi.devOpsScore),\n      }));\n      this.updateTrends();\n      this.updateCharts();\n    });\n  }\n\n  // Update trends after period change\n  onPeriodChange() {\n    this.updateTrends();\n  }\n\n  // Filtering handlers for each trend table\n  onDeploymentFilterChange() {\n    this.updateTrends();\n  }\n  onCycleFilterChange() {\n    this.updateTrends();\n  }\n  onMttrFilterChange() {\n    this.updateTrends();\n  }\n  onTestAutoFilterChange() {\n    this.updateTrends();\n  }\n\n\n\n  updateCharts(): void {\n    const quarters = [...new Set(this.kpis.map(kpi => `${kpi.quarter} ${kpi.year}`))];\n    const deploymentData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      // Only use valid numbers for deploymentFrequency\n      const valid = qKpis.map(kpi => Number(kpi.deploymentFrequency)).filter(val => Number.isFinite(val));\n      return valid.length > 0 ? valid.reduce((sum, val) => sum + val, 0) / valid.length : 0;\n    });\n    console.log('Quarters:', quarters);\n    console.log('Deployment Data:', deploymentData);\n    console.log('KPIs:', this.kpis);\n\n    const failureData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.changeFailureRate, 0) / qKpis.length;\n    });\n\n    this.createDeploymentChart(quarters, deploymentData);\n    this.createFailureRateChart(quarters, failureData);\n  }\n\n  private createDeploymentChart(labels: string[], data: number[]): void {\n    if (this.deploymentChart) {\n      this.deploymentChart.destroy();\n    }\n\n    this.deploymentChart = new Chart('deploymentChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Deployment Frequency',\n          data,\n          borderColor: '#4CAF50',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  private createFailureRateChart(labels: string[], data: number[]): void {\n    if (this.failureRateChart) {\n      this.failureRateChart.destroy();\n    }\n\n    this.failureRateChart = new Chart('failureRateChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Change Failure Rate',\n          data,\n          borderColor: '#F44336',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 100\n          }\n        }\n      }\n    });\n  }\n\n  onNWBChange(nwb: string): void {\n    this.selectedNWB = nwb;\n    this.loadKPIs();\n  }\n}\n","<div class=\"kpi-overview\">\n  <div class=\"tab-nav\" style=\"margin-bottom: 24px; display: flex; gap: 16px;\">\n    <button (click)=\"selectedTab = 'overview'\" [class.active]=\"selectedTab === 'overview'\">Overview</button>\n    <button (click)=\"selectedTab = 'trends'\" [class.active]=\"selectedTab === 'trends'\">Trends by Team & Product</button>\n  </div>\n  <div class=\"header\">\n    <div class=\"summary-metrics\" style=\"margin-bottom: 24px;\">\n      <h2>Summary</h2>\n      <div>Total reporting teams for selected period: <strong>{{ totalTeams }}</strong></div>\n    </div>\n  \n    <button (click)=\"showRawData = !showRawData\" style=\"margin-bottom: 10px;\">\n      {{ showRawData ? 'Hide' : 'Show' }} Raw KPI Data\n    </button>\n    <div *ngIf=\"showRawData\" style=\"max-height: 300px; overflow: auto; background: #f7f7f7; border: 1px solid #ccc; padding: 8px; margin-bottom: 20px;\">\n      <pre>{{ rawKpiJson }}</pre>\n    </div>\n    <h1>Engineering KPIs Overview</h1>\n    <div class=\"nwb-selector\">\n      <label for=\"nwb\">Network Bank:</label>\n      <select id=\"nwb\" [(ngModel)]=\"selectedNWB\" (change)=\"onNWBChange(selectedNWB)\">\n        <option value=\"RBRO\">RBRO</option>\n        <option value=\"RBBH\">RBBH</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"charts-container\" *ngIf=\"selectedTab === 'overview'\">\n    <div class=\"chart-wrapper\">\n      <h2>Deployment Frequency</h2>\n      <canvas id=\"deploymentChart\"></canvas>\n    </div>\n    <div class=\"chart-wrapper\">\n      <h2>Change Failure Rate</h2>\n      <canvas id=\"failureRateChart\"></canvas>\n    </div>\n  </div>\n\n  <div class=\"kpi-metrics\">\n    <div class=\"metric-card\" *ngFor=\"let kpi of kpis | slice:-1\">\n      <h3>Latest Metrics</h3>\n      <div class=\"metric\">\n        <span>CI/CD Pipeline Coverage:</span>\n        <span>{{kpi.cicdPipeline}}%</span>\n      </div>\n      <div class=\"metric\">\n        <span>Test Automation Coverage:</span>\n        <span>{{kpi.testAutomation}}%</span>\n      </div>\n      <div class=\"metric\">\n        <span>MTTR:</span>\n        <span>{{kpi.mttr}} hours</span>\n      </div>\n      <div class=\"metric\">\n        <span>DevOps Score:</span>\n        <span>{{kpi.devOpsScore}}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Trend Tables -->\n<div class=\"trend-tables\" style=\"margin-top: 32px;\" *ngIf=\"selectedTab === 'trends'\">\n  <h2>Trends by Team & Product</h2>\n  <div class=\"trend-table-wrapper\" style=\"display: flex; flex-wrap: wrap; gap: 32px;\">\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Deployment Frequency</h3>\n      <input type=\"text\" [(ngModel)]=\"deploymentFilter\" (ngModelChange)=\"onDeploymentFilterChange()\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setDeploymentSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setDeploymentSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setDeploymentSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of deploymentFrequencyTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Cycle Time</h3>\n      <input type=\"text\" [(ngModel)]=\"cycleFilter\" (ngModelChange)=\"onCycleFilterChange()\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setCycleSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setCycleSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setCycleSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of cycleTimeTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>MTTR</h3>\n      <input type=\"text\" [(ngModel)]=\"mttrFilter\" (ngModelChange)=\"onMttrFilterChange()\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setMttrSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setMttrSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setMttrSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of mttrTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Test Automation</h3>\n      <input type=\"text\" [(ngModel)]=\"testAutoFilter\" (ngModelChange)=\"onTestAutoFilterChange()\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setTestAutoSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setTestAutoSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setTestAutoSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of testAutomationTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<!-- All KPIs Table -->\n<div class=\"all-kpis-table\" style=\"margin-top: 40px;\">\n  <h2>All KPIs (Raw Data Table)</h2>\n  <div style=\"margin-bottom: 16px;\">\n    <label for=\"period\">Filter by Period (Year + Quarter):</label>\n    <select id=\"period\" [(ngModel)]=\"selectedPeriod\" (change)=\"onPeriodChange()\">\n      <option value=\"\">All Periods</option>\n      <option *ngFor=\"let period of periods\" [value]=\"period\">{{period}}</option>\n    </select>\n  </div>\n  <div style=\"overflow-x: auto;\">\n    <table style=\"width:100%; border-collapse: collapse;\">\n      <thead>\n        <tr style=\"background:#f0f0f0;\">\n          <th style=\"border:1px solid #ccc; padding:4px;\">NWB</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Team</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Tribe</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Product</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Quarter</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Year</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Deployment Frequency</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Cycle Time</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Change Failure Rate</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">MTTR</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">CI/CD Pipeline</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Test Automation</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">DevOps Score</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let kpi of filteredKpis\">\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.nwb}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.team}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.tribe}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.product}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.quarter}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.year}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.deploymentFrequency}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.cycleTime}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.changeFailureRate}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.mttr}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.cicdPipeline}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.testAutomation}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.devOpsScore}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}