{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/kpi.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction KpiOverviewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"pre\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.rawKpiJson);\n  }\n}\nfunction KpiOverviewComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"h3\");\n    i0.ɵɵtext(2, \"Latest Metrics\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 34)(4, \"span\");\n    i0.ɵɵtext(5, \"CI/CD Pipeline Coverage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 34)(9, \"span\");\n    i0.ɵɵtext(10, \"Test Automation Coverage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 34)(14, \"span\");\n    i0.ɵɵtext(15, \"MTTR:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 34)(19, \"span\");\n    i0.ɵɵtext(20, \"DevOps Score:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const kpi_r2 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.cicdPipeline, \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.testAutomation, \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", kpi_r2.mttr, \" hours\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(kpi_r2.devOpsScore);\n  }\n}\nfunction KpiOverviewComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.value);\n  }\n}\nfunction KpiOverviewComponent_tr_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.value);\n  }\n}\nfunction KpiOverviewComponent_tr_82_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r5.value);\n  }\n}\nfunction KpiOverviewComponent_tr_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r6.value);\n  }\n}\nfunction KpiOverviewComponent_option_107_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const period_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(period_r7);\n  }\n}\nfunction KpiOverviewComponent_tr_139_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 31);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 31);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 31);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 31);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 31);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 31);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\", 31);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 31);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\", 31);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\", 31);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\", 31);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const kpi_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.nwb);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.team);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.tribe);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.quarter);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.deploymentFrequency);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.cycleTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.changeFailureRate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.mttr);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.cicdPipeline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.testAutomation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kpi_r8.devOpsScore);\n  }\n}\nexport class KpiOverviewComponent {\n  get rawKpiJson() {\n    return JSON.stringify(this.kpis, null, 2);\n  }\n  get periods() {\n    return [...new Set(this.kpis.map(kpi => `${kpi.year} ${kpi.quarter}`))];\n  }\n  get filteredKpis() {\n    if (!this.selectedPeriod) return this.kpis;\n    const [year, quarter] = this.selectedPeriod.split(' ');\n    return this.kpis.filter(kpi => String(kpi.year) === year && String(kpi.quarter) === quarter);\n  }\n  get totalTeams() {\n    // Unique teams with a non-empty name in the filtered set\n    return new Set(this.filteredKpis.map(kpi => kpi.team).filter(t => t)).size;\n  }\n  getTrendValue(row, key) {\n    if (key === 'team') return row.team;\n    if (key === 'product') return row.product;\n    return row.value;\n  }\n  updateTrends() {\n    // Deployment Frequency\n    let deploymentRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.deploymentFrequency\n    }));\n    if (this.deploymentFilter) {\n      deploymentRows = deploymentRows.filter(row => row.team?.toLowerCase().includes(this.deploymentFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.deploymentFilter.toLowerCase()));\n    }\n    deploymentRows = deploymentRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.deploymentSortKey);\n      const valB = this.getTrendValue(b, this.deploymentSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.deploymentSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.deploymentSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.deploymentFrequencyTrend = deploymentRows;\n    // Cycle Time\n    let cycleRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.cycleTime\n    }));\n    if (this.cycleFilter) {\n      cycleRows = cycleRows.filter(row => row.team?.toLowerCase().includes(this.cycleFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.cycleFilter.toLowerCase()));\n    }\n    cycleRows = cycleRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.cycleSortKey);\n      const valB = this.getTrendValue(b, this.cycleSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.cycleSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.cycleSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.cycleTimeTrend = cycleRows;\n    // MTTR\n    let mttrRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.mttr\n    }));\n    if (this.mttrFilter) {\n      mttrRows = mttrRows.filter(row => row.team?.toLowerCase().includes(this.mttrFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.mttrFilter.toLowerCase()));\n    }\n    mttrRows = mttrRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.mttrSortKey);\n      const valB = this.getTrendValue(b, this.mttrSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.mttrSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.mttrSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.mttrTrend = mttrRows;\n    // Test Automation\n    let testAutoRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.testAutomation\n    }));\n    if (this.testAutoFilter) {\n      testAutoRows = testAutoRows.filter(row => row.team?.toLowerCase().includes(this.testAutoFilter.toLowerCase()) || row.product?.toLowerCase().includes(this.testAutoFilter.toLowerCase()));\n    }\n    testAutoRows = testAutoRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.testAutoSortKey);\n      const valB = this.getTrendValue(b, this.testAutoSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.testAutoSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.testAutoSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.testAutomationTrend = testAutoRows;\n  }\n  // --- Methods to update sort and filter ---\n  setDeploymentSort(key) {\n    if (this.deploymentSortKey === key) {\n      this.deploymentSortDir = this.deploymentSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.deploymentSortKey = key;\n      this.deploymentSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setCycleSort(key) {\n    if (this.cycleSortKey === key) {\n      this.cycleSortDir = this.cycleSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.cycleSortKey = key;\n      this.cycleSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setMttrSort(key) {\n    if (this.mttrSortKey === key) {\n      this.mttrSortDir = this.mttrSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.mttrSortKey = key;\n      this.mttrSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setTestAutoSort(key) {\n    if (this.testAutoSortKey === key) {\n      this.testAutoSortDir = this.testAutoSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.testAutoSortKey = key;\n      this.testAutoSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  constructor(kpiService) {\n    this.kpiService = kpiService;\n    this.showRawData = false;\n    this.kpis = [];\n    this.selectedNWB = 'RBRO';\n    this.selectedPeriod = '';\n    // --- Sorting and Filtering State ---\n    this.deploymentSortKey = 'value';\n    this.deploymentSortDir = 'desc';\n    this.deploymentFilter = '';\n    this.cycleSortKey = 'value';\n    this.cycleSortDir = 'desc';\n    this.cycleFilter = '';\n    this.mttrSortKey = 'value';\n    this.mttrSortDir = 'desc';\n    this.mttrFilter = '';\n    this.testAutoSortKey = 'value';\n    this.testAutoSortDir = 'desc';\n    this.testAutoFilter = '';\n    // --- Trend Table Data (arrays, not getters) ---\n    this.deploymentFrequencyTrend = [];\n    this.cycleTimeTrend = [];\n    this.mttrTrend = [];\n    this.testAutomationTrend = [];\n  }\n  ngOnInit() {\n    this.loadKPIs();\n  }\n  // Update trends after KPIs load\n  loadKPIs() {\n    this.kpiService.getKPIs().subscribe(kpis => {\n      this.kpis = kpis;\n      this.updateTrends();\n    });\n  }\n  // Update trends after period change\n  onPeriodChange() {\n    this.updateTrends();\n  }\n  // Filtering handlers for each trend table\n  onDeploymentFilterChange() {\n    this.updateTrends();\n  }\n  onCycleFilterChange() {\n    this.updateTrends();\n  }\n  onMttrFilterChange() {\n    this.updateTrends();\n  }\n  onTestAutoFilterChange() {\n    this.updateTrends();\n  }\n  loadKPIs() {\n    this.kpiService.getKPIsByNWB(this.selectedNWB).subscribe(data => {\n      this.kpis = data;\n      console.log('Fetched KPIs:', this.kpis);\n      if (this.kpis.length > 0) {\n        console.log('Sample KPI:', this.kpis[0]);\n        console.log('Types:', {\n          deploymentFrequency: typeof this.kpis[0].deploymentFrequency,\n          changeFailureRate: typeof this.kpis[0].changeFailureRate\n        });\n      } else {\n        console.log('No KPIs returned for NWB', this.selectedNWB);\n      }\n      this.updateCharts();\n    });\n  }\n  updateCharts() {\n    const quarters = [...new Set(this.kpis.map(kpi => `${kpi.quarter} ${kpi.year}`))];\n    const deploymentData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.deploymentFrequency, 0) / qKpis.length;\n    });\n    const failureData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.changeFailureRate, 0) / qKpis.length;\n    });\n    this.createDeploymentChart(quarters, deploymentData);\n    this.createFailureRateChart(quarters, failureData);\n  }\n  createDeploymentChart(labels, data) {\n    if (this.deploymentChart) {\n      this.deploymentChart.destroy();\n    }\n    this.deploymentChart = new Chart('deploymentChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Deployment Frequency',\n          data,\n          borderColor: '#4CAF50',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  createFailureRateChart(labels, data) {\n    if (this.failureRateChart) {\n      this.failureRateChart.destroy();\n    }\n    this.failureRateChart = new Chart('failureRateChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Change Failure Rate',\n          data,\n          borderColor: '#F44336',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 100\n          }\n        }\n      }\n    });\n  }\n  onNWBChange(nwb) {\n    this.selectedNWB = nwb;\n    this.loadKPIs();\n  }\n  static {\n    this.ɵfac = function KpiOverviewComponent_Factory(t) {\n      return new (t || KpiOverviewComponent)(i0.ɵɵdirectiveInject(i1.KpiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: KpiOverviewComponent,\n      selectors: [[\"app-kpi-overview\"]],\n      decls: 140,\n      vars: 19,\n      consts: [[1, \"kpi-overview\"], [1, \"header\"], [1, \"summary-metrics\", 2, \"margin-bottom\", \"24px\"], [2, \"margin-bottom\", \"10px\", 3, \"click\"], [\"style\", \"max-height: 300px; overflow: auto; background: #f7f7f7; border: 1px solid #ccc; padding: 8px; margin-bottom: 20px;\", 4, \"ngIf\"], [1, \"nwb-selector\"], [\"for\", \"nwb\"], [\"id\", \"nwb\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"RBRO\"], [\"value\", \"RBBH\"], [1, \"charts-container\"], [1, \"chart-wrapper\"], [\"id\", \"deploymentChart\"], [\"id\", \"failureRateChart\"], [1, \"kpi-metrics\"], [\"class\", \"metric-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"trend-tables\", 2, \"margin-top\", \"32px\"], [1, \"trend-table-wrapper\", 2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"32px\"], [1, \"trend-table\", 2, \"flex\", \"1 1 300px\", \"min-width\", \"260px\"], [\"type\", \"text\", \"placeholder\", \"Filter by team or product\", 2, \"margin-bottom\", \"6px\", \"width\", \"100%\", 3, \"ngModelChange\", \"ngModel\"], [2, \"width\", \"100%\", \"border-collapse\", \"collapse\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"all-kpis-table\", 2, \"margin-top\", \"40px\"], [2, \"margin-bottom\", \"16px\"], [\"for\", \"period\"], [\"id\", \"period\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"overflow-x\", \"auto\"], [2, \"background\", \"#f0f0f0\"], [2, \"border\", \"1px solid #ccc\", \"padding\", \"4px\"], [2, \"max-height\", \"300px\", \"overflow\", \"auto\", \"background\", \"#f7f7f7\", \"border\", \"1px solid #ccc\", \"padding\", \"8px\", \"margin-bottom\", \"20px\"], [1, \"metric-card\"], [1, \"metric\"], [3, \"value\"]],\n      template: function KpiOverviewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Summary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\");\n          i0.ɵɵtext(6, \"Total reporting teams for selected period: \");\n          i0.ɵɵelementStart(7, \"strong\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_button_click_9_listener() {\n            return ctx.showRawData = !ctx.showRawData;\n          });\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, KpiOverviewComponent_div_11_Template, 3, 1, \"div\", 4);\n          i0.ɵɵelementStart(12, \"h1\");\n          i0.ɵɵtext(13, \"Engineering KPIs Overview\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 6);\n          i0.ɵɵtext(16, \"Network Bank:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"select\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_select_ngModelChange_17_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedNWB, $event) || (ctx.selectedNWB = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function KpiOverviewComponent_Template_select_change_17_listener() {\n            return ctx.onNWBChange(ctx.selectedNWB);\n          });\n          i0.ɵɵelementStart(18, \"option\", 8);\n          i0.ɵɵtext(19, \"RBRO\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"option\", 9);\n          i0.ɵɵtext(21, \"RBBH\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(22, \"div\", 10)(23, \"div\", 11)(24, \"h2\");\n          i0.ɵɵtext(25, \"Deployment Frequency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"canvas\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 11)(28, \"h2\");\n          i0.ɵɵtext(29, \"Change Failure Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"canvas\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 14);\n          i0.ɵɵtemplate(32, KpiOverviewComponent_div_32_Template, 23, 4, \"div\", 15);\n          i0.ɵɵpipe(33, \"slice\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(34, \"div\", 16)(35, \"h2\");\n          i0.ɵɵtext(36, \"Trends by Team & Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 17)(38, \"div\", 18)(39, \"h3\");\n          i0.ɵɵtext(40, \"Deployment Frequency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"input\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_input_ngModelChange_41_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.deploymentFilter, $event) || (ctx.deploymentFilter = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"table\", 20)(43, \"thead\")(44, \"tr\")(45, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_45_listener() {\n            return ctx.setDeploymentSort(\"team\");\n          });\n          i0.ɵɵtext(46, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_47_listener() {\n            return ctx.setDeploymentSort(\"product\");\n          });\n          i0.ɵɵtext(48, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_49_listener() {\n            return ctx.setDeploymentSort(\"value\");\n          });\n          i0.ɵɵtext(50, \"Value\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(51, \"tbody\");\n          i0.ɵɵtemplate(52, KpiOverviewComponent_tr_52_Template, 7, 3, \"tr\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(53, \"div\", 18)(54, \"h3\");\n          i0.ɵɵtext(55, \"Cycle Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"input\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_input_ngModelChange_56_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cycleFilter, $event) || (ctx.cycleFilter = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"table\", 20)(58, \"thead\")(59, \"tr\")(60, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_60_listener() {\n            return ctx.setCycleSort(\"team\");\n          });\n          i0.ɵɵtext(61, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(62, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_62_listener() {\n            return ctx.setCycleSort(\"product\");\n          });\n          i0.ɵɵtext(63, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(64, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_64_listener() {\n            return ctx.setCycleSort(\"value\");\n          });\n          i0.ɵɵtext(65, \"Value\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(66, \"tbody\");\n          i0.ɵɵtemplate(67, KpiOverviewComponent_tr_67_Template, 7, 3, \"tr\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(68, \"div\", 18)(69, \"h3\");\n          i0.ɵɵtext(70, \"MTTR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"input\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_input_ngModelChange_71_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mttrFilter, $event) || (ctx.mttrFilter = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(72, \"table\", 20)(73, \"thead\")(74, \"tr\")(75, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_75_listener() {\n            return ctx.setMttrSort(\"team\");\n          });\n          i0.ɵɵtext(76, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(77, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_77_listener() {\n            return ctx.setMttrSort(\"product\");\n          });\n          i0.ɵɵtext(78, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(79, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_79_listener() {\n            return ctx.setMttrSort(\"value\");\n          });\n          i0.ɵɵtext(80, \"Value\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(81, \"tbody\");\n          i0.ɵɵtemplate(82, KpiOverviewComponent_tr_82_Template, 7, 3, \"tr\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(83, \"div\", 18)(84, \"h3\");\n          i0.ɵɵtext(85, \"Test Automation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"input\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_input_ngModelChange_86_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.testAutoFilter, $event) || (ctx.testAutoFilter = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(87, \"table\", 20)(88, \"thead\")(89, \"tr\")(90, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_90_listener() {\n            return ctx.setTestAutoSort(\"team\");\n          });\n          i0.ɵɵtext(91, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(92, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_92_listener() {\n            return ctx.setTestAutoSort(\"product\");\n          });\n          i0.ɵɵtext(93, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(94, \"th\", 21);\n          i0.ɵɵlistener(\"click\", function KpiOverviewComponent_Template_th_click_94_listener() {\n            return ctx.setTestAutoSort(\"value\");\n          });\n          i0.ɵɵtext(95, \"Value\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(96, \"tbody\");\n          i0.ɵɵtemplate(97, KpiOverviewComponent_tr_97_Template, 7, 3, \"tr\", 22);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(98, \"div\", 23)(99, \"h2\");\n          i0.ɵɵtext(100, \"All KPIs (Raw Data Table)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(101, \"div\", 24)(102, \"label\", 25);\n          i0.ɵɵtext(103, \"Filter by Period (Year + Quarter):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(104, \"select\", 26);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function KpiOverviewComponent_Template_select_ngModelChange_104_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedPeriod, $event) || (ctx.selectedPeriod = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(105, \"option\", 27);\n          i0.ɵɵtext(106, \"All Periods\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(107, KpiOverviewComponent_option_107_Template, 2, 2, \"option\", 28);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(108, \"div\", 29)(109, \"table\", 20)(110, \"thead\")(111, \"tr\", 30)(112, \"th\", 31);\n          i0.ɵɵtext(113, \"NWB\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(114, \"th\", 31);\n          i0.ɵɵtext(115, \"Team\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(116, \"th\", 31);\n          i0.ɵɵtext(117, \"Tribe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(118, \"th\", 31);\n          i0.ɵɵtext(119, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(120, \"th\", 31);\n          i0.ɵɵtext(121, \"Quarter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(122, \"th\", 31);\n          i0.ɵɵtext(123, \"Year\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(124, \"th\", 31);\n          i0.ɵɵtext(125, \"Deployment Frequency\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(126, \"th\", 31);\n          i0.ɵɵtext(127, \"Cycle Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(128, \"th\", 31);\n          i0.ɵɵtext(129, \"Change Failure Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(130, \"th\", 31);\n          i0.ɵɵtext(131, \"MTTR\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(132, \"th\", 31);\n          i0.ɵɵtext(133, \"CI/CD Pipeline\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(134, \"th\", 31);\n          i0.ɵɵtext(135, \"Test Automation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(136, \"th\", 31);\n          i0.ɵɵtext(137, \"DevOps Score\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(138, \"tbody\");\n          i0.ɵɵtemplate(139, KpiOverviewComponent_tr_139_Template, 27, 13, \"tr\", 22);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.totalTeams);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showRawData ? \"Hide\" : \"Show\", \" Raw KPI Data \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showRawData);\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedNWB);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(33, 16, ctx.kpis, -1));\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.deploymentFilter);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.deploymentFrequencyTrend);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cycleFilter);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cycleTimeTrend);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mttrFilter);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.mttrTrend);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.testAutoFilter);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.testAutomationTrend);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedPeriod);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.periods);\n          i0.ɵɵadvance(32);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredKpis);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.SlicePipe],\n      styles: [\".kpi-overview[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  max-width: 1200px;\\n  margin: 0 auto;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 30px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #333;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .nwb-selector[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .nwb-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  padding: 8px;\\n  border-radius: 4px;\\n  border: 1px solid #ddd;\\n  font-size: 16px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 20px;\\n  margin-bottom: 30px;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n  color: #333;\\n  font-size: 1.2em;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 300px !important;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%] {\\n  background: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 20px;\\n  color: #333;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 10px 0;\\n  border-bottom: 1px solid #eee;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:first-child {\\n  color: #666;\\n}\\n.kpi-overview[_ngcontent-%COMP%]   .kpi-metrics[_ngcontent-%COMP%]   .metric-card[_ngcontent-%COMP%]   .metric[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:last-child {\\n  font-weight: bold;\\n  color: #333;\\n}\\n\\n@media (max-width: 768px) {\\n  .kpi-overview[_ngcontent-%COMP%]   .charts-container[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n  .kpi-overview[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 15px;\\n    text-align: center;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9rcGktb3ZlcnZpZXcva3BpLW92ZXJ2aWV3LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDSTtFQUNFLFNBQUE7RUFDQSxXQUFBO0FBQ047QUFFSTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7QUFBTjtBQUVNO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0FBQVI7QUFLRTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtBQUhKO0FBS0k7RUFDRSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLHdDQUFBO0FBSE47QUFLTTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUhSO0FBTU07RUFDRSxzQkFBQTtFQUNBLHdCQUFBO0FBSlI7QUFVSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFSTjtBQVVNO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQVJSO0FBV007RUFDRSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxlQUFBO0VBQ0EsNkJBQUE7QUFUUjtBQVdRO0VBQ0UsbUJBQUE7QUFUVjtBQVlRO0VBQ0UsV0FBQTtBQVZWO0FBYVE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7QUFYVjs7QUFrQkE7RUFFSTtJQUNFLDBCQUFBO0VBaEJKO0VBbUJFO0lBQ0Usc0JBQUE7SUFDQSxTQUFBO0lBQ0Esa0JBQUE7RUFqQko7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5rcGktb3ZlcnZpZXcge1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgLmhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuXG4gICAgaDEge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgfVxuXG4gICAgLm53Yi1zZWxlY3RvciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogMTBweDtcblxuICAgICAgc2VsZWN0IHtcbiAgICAgICAgcGFkZGluZzogOHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuY2hhcnRzLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgZ2FwOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG5cbiAgICAuY2hhcnQtd3JhcHBlciB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuXG4gICAgICBoMiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgfVxuXG4gICAgICBjYW52YXMge1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICBoZWlnaHQ6IDMwMHB4ICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmtwaS1tZXRyaWNzIHtcbiAgICAubWV0cmljLWNhcmQge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcblxuICAgICAgaDMge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgIH1cblxuICAgICAgLm1ldHJpYyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgcGFkZGluZzogMTBweCAwO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICBzcGFuOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5rcGktb3ZlcnZpZXcge1xuICAgIC5jaGFydHMtY29udGFpbmVyIHtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIH1cblxuICAgIC5oZWFkZXIge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGdhcDogMTVweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","rawKpiJson","ɵɵtextInterpolate1","kpi_r2","cicdPipeline","testAutomation","mttr","devOpsScore","row_r3","team","product","value","row_r4","row_r5","row_r6","ɵɵproperty","period_r7","kpi_r8","nwb","tribe","quarter","year","deploymentFrequency","cycleTime","changeFailureRate","KpiOverviewComponent","JSON","stringify","kpis","periods","Set","map","kpi","filteredKpis","selectedPeriod","split","filter","String","totalTeams","t","size","getTrendValue","row","key","updateTrends","deploymentRows","deploymentFilter","toLowerCase","includes","sort","a","b","valA","deploymentSortKey","valB","deploymentSortDir","deploymentFrequencyTrend","cycleRows","cycleFilter","cycleSortKey","cycleSortDir","cycleTimeTrend","mttrRows","mttrFilter","mttrSortKey","mttrSortDir","mttrTrend","testAutoRows","testAutoFilter","testAutoSortKey","testAutoSortDir","testAutomationTrend","setDeploymentSort","setCycleSort","setMttrSort","setTestAutoSort","constructor","kpiService","showRawData","selectedNWB","ngOnInit","loadKPIs","getKPIs","subscribe","onPeriodChange","onDeploymentFilterChange","onCycleFilterChange","onMttrFilterChange","onTestAutoFilterChange","getKPIsByNWB","data","console","log","length","updateCharts","quarters","deploymentData","q","qKpis","reduce","sum","failureData","createDeploymentChart","createFailureRateChart","labels","deploymentChart","destroy","type","datasets","label","borderColor","tension","options","responsive","scales","y","beginAtZero","failureRateChart","max","onNWBChange","ɵɵdirectiveInject","i1","KpiService","selectors","decls","vars","consts","template","KpiOverviewComponent_Template","rf","ctx","ɵɵlistener","KpiOverviewComponent_Template_button_click_9_listener","ɵɵtemplate","KpiOverviewComponent_div_11_Template","ɵɵtwoWayListener","KpiOverviewComponent_Template_select_ngModelChange_17_listener","$event","ɵɵtwoWayBindingSet","KpiOverviewComponent_Template_select_change_17_listener","ɵɵelement","KpiOverviewComponent_div_32_Template","KpiOverviewComponent_Template_input_ngModelChange_41_listener","KpiOverviewComponent_Template_th_click_45_listener","KpiOverviewComponent_Template_th_click_47_listener","KpiOverviewComponent_Template_th_click_49_listener","KpiOverviewComponent_tr_52_Template","KpiOverviewComponent_Template_input_ngModelChange_56_listener","KpiOverviewComponent_Template_th_click_60_listener","KpiOverviewComponent_Template_th_click_62_listener","KpiOverviewComponent_Template_th_click_64_listener","KpiOverviewComponent_tr_67_Template","KpiOverviewComponent_Template_input_ngModelChange_71_listener","KpiOverviewComponent_Template_th_click_75_listener","KpiOverviewComponent_Template_th_click_77_listener","KpiOverviewComponent_Template_th_click_79_listener","KpiOverviewComponent_tr_82_Template","KpiOverviewComponent_Template_input_ngModelChange_86_listener","KpiOverviewComponent_Template_th_click_90_listener","KpiOverviewComponent_Template_th_click_92_listener","KpiOverviewComponent_Template_th_click_94_listener","KpiOverviewComponent_tr_97_Template","KpiOverviewComponent_Template_select_ngModelChange_104_listener","KpiOverviewComponent_option_107_Template","KpiOverviewComponent_tr_139_Template","ɵɵtwoWayProperty","ɵɵpipeBind2"],"sources":["D:\\workspace\\eng-dashboard\\frontend\\src\\app\\components\\kpi-overview\\kpi-overview.component.ts","D:\\workspace\\eng-dashboard\\frontend\\src\\app\\components\\kpi-overview\\kpi-overview.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { KpiService } from '../../services/kpi.service';\nimport { KPI } from '../../models/kpi.model';\nimport { Chart } from 'chart.js/auto';\n\ntype TrendRow = { team: string; product: string; value: number };\n\n@Component({\n  selector: 'app-kpi-overview',\n  templateUrl: './kpi-overview.component.html',\n  styleUrls: ['./kpi-overview.component.scss']\n})\nexport class KpiOverviewComponent implements OnInit {\n  showRawData: boolean = false;\n  get rawKpiJson(): string {\n    return JSON.stringify(this.kpis, null, 2);\n  }\n  kpis: KPI[] = [];\n  selectedNWB: string = 'RBRO';\n  selectedPeriod: string = '';\n  deploymentChart: any;\n  failureRateChart: any;\n\n  get periods(): string[] {\n    return [...new Set(this.kpis.map(kpi => `${kpi.year} ${kpi.quarter}`))];\n  }\n\n  get filteredKpis(): KPI[] {\n    if (!this.selectedPeriod) return this.kpis;\n    const [year, quarter] = this.selectedPeriod.split(' ');\n    return this.kpis.filter(kpi => String(kpi.year) === year && String(kpi.quarter) === quarter);\n  }\n\n  get totalTeams(): number {\n    // Unique teams with a non-empty name in the filtered set\n    return new Set(this.filteredKpis.map(kpi => kpi.team).filter(t => t)).size;\n  }\n\n  // --- Sorting and Filtering State ---\n  deploymentSortKey: string = 'value';\n  deploymentSortDir: 'asc' | 'desc' = 'desc';\n  deploymentFilter: string = '';\n\n  cycleSortKey: string = 'value';\n  cycleSortDir: 'asc' | 'desc' = 'desc';\n  cycleFilter: string = '';\n\n  mttrSortKey: string = 'value';\n  mttrSortDir: 'asc' | 'desc' = 'desc';\n  mttrFilter: string = '';\n\n  testAutoSortKey: string = 'value';\n  testAutoSortDir: 'asc' | 'desc' = 'desc';\n  testAutoFilter: string = '';\n\n  // --- Trend Table Data (arrays, not getters) ---\n  deploymentFrequencyTrend: TrendRow[] = [];\n  cycleTimeTrend: TrendRow[] = [];\n  mttrTrend: TrendRow[] = [];\n  testAutomationTrend: TrendRow[] = [];\n\n  private getTrendValue(row: TrendRow, key: string): string | number {\n    if (key === 'team') return row.team;\n    if (key === 'product') return row.product;\n    return row.value;\n  }\n\n  updateTrends() {\n    // Deployment Frequency\n    let deploymentRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.deploymentFrequency\n    }));\n    if (this.deploymentFilter) {\n      deploymentRows = deploymentRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.deploymentFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.deploymentFilter.toLowerCase()))\n      );\n    }\n    deploymentRows = deploymentRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.deploymentSortKey);\n      const valB = this.getTrendValue(b, this.deploymentSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.deploymentSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.deploymentSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.deploymentFrequencyTrend = deploymentRows;\n\n    // Cycle Time\n    let cycleRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.cycleTime\n    }));\n    if (this.cycleFilter) {\n      cycleRows = cycleRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.cycleFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.cycleFilter.toLowerCase()))\n      );\n    }\n    cycleRows = cycleRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.cycleSortKey);\n      const valB = this.getTrendValue(b, this.cycleSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.cycleSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.cycleSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.cycleTimeTrend = cycleRows;\n\n    // MTTR\n    let mttrRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.mttr\n    }));\n    if (this.mttrFilter) {\n      mttrRows = mttrRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.mttrFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.mttrFilter.toLowerCase()))\n      );\n    }\n    mttrRows = mttrRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.mttrSortKey);\n      const valB = this.getTrendValue(b, this.mttrSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.mttrSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.mttrSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.mttrTrend = mttrRows;\n\n    // Test Automation\n    let testAutoRows = this.filteredKpis.map(kpi => ({\n      team: kpi.team,\n      product: kpi.product,\n      value: kpi.testAutomation\n    }));\n    if (this.testAutoFilter) {\n      testAutoRows = testAutoRows.filter(row =>\n        (row.team?.toLowerCase().includes(this.testAutoFilter.toLowerCase()) ||\n         row.product?.toLowerCase().includes(this.testAutoFilter.toLowerCase()))\n      );\n    }\n    testAutoRows = testAutoRows.sort((a, b) => {\n      const valA = this.getTrendValue(a, this.testAutoSortKey);\n      const valB = this.getTrendValue(b, this.testAutoSortKey);\n      if (valA == null) return 1;\n      if (valB == null) return -1;\n      if (valA < valB) return this.testAutoSortDir === 'asc' ? -1 : 1;\n      if (valA > valB) return this.testAutoSortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n    this.testAutomationTrend = testAutoRows;\n  }\n\n  // --- Methods to update sort and filter ---\n  setDeploymentSort(key: string) {\n    if (this.deploymentSortKey === key) {\n      this.deploymentSortDir = this.deploymentSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.deploymentSortKey = key;\n      this.deploymentSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setCycleSort(key: string) {\n    if (this.cycleSortKey === key) {\n      this.cycleSortDir = this.cycleSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.cycleSortKey = key;\n      this.cycleSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setMttrSort(key: string) {\n    if (this.mttrSortKey === key) {\n      this.mttrSortDir = this.mttrSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.mttrSortKey = key;\n      this.mttrSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n  setTestAutoSort(key: string) {\n    if (this.testAutoSortKey === key) {\n      this.testAutoSortDir = this.testAutoSortDir === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.testAutoSortKey = key;\n      this.testAutoSortDir = 'desc';\n    }\n    this.updateTrends();\n  }\n\n  constructor(private kpiService: KpiService) {}\n\n  ngOnInit(): void {\n    this.loadKPIs();\n  }\n\n  // Update trends after KPIs load\n  loadKPIs() {\n    this.kpiService.getKPIs().subscribe(kpis => {\n      this.kpis = kpis;\n      this.updateTrends();\n    });\n  }\n\n  // Update trends after period change\n  onPeriodChange() {\n    this.updateTrends();\n  }\n\n  // Filtering handlers for each trend table\n  onDeploymentFilterChange() {\n    this.updateTrends();\n  }\n  onCycleFilterChange() {\n    this.updateTrends();\n  }\n  onMttrFilterChange() {\n    this.updateTrends();\n  }\n  onTestAutoFilterChange() {\n    this.updateTrends();\n  }\n\n\n  loadKPIs(): void {\n    this.kpiService.getKPIsByNWB(this.selectedNWB).subscribe(data => {\n      this.kpis = data;\n      console.log('Fetched KPIs:', this.kpis);\n      if (this.kpis.length > 0) {\n        console.log('Sample KPI:', this.kpis[0]);\n        console.log('Types:', {\n          deploymentFrequency: typeof this.kpis[0].deploymentFrequency,\n          changeFailureRate: typeof this.kpis[0].changeFailureRate\n        });\n      } else {\n        console.log('No KPIs returned for NWB', this.selectedNWB);\n      }\n      this.updateCharts();\n    });\n  }\n\n  updateCharts(): void {\n    const quarters = [...new Set(this.kpis.map(kpi => `${kpi.quarter} ${kpi.year}`))];\n    const deploymentData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.deploymentFrequency, 0) / qKpis.length;\n    });\n\n    const failureData = quarters.map(q => {\n      const qKpis = this.kpis.filter(kpi => `${kpi.quarter} ${kpi.year}` === q);\n      return qKpis.reduce((sum, kpi) => sum + kpi.changeFailureRate, 0) / qKpis.length;\n    });\n\n    this.createDeploymentChart(quarters, deploymentData);\n    this.createFailureRateChart(quarters, failureData);\n  }\n\n  private createDeploymentChart(labels: string[], data: number[]): void {\n    if (this.deploymentChart) {\n      this.deploymentChart.destroy();\n    }\n\n    this.deploymentChart = new Chart('deploymentChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Deployment Frequency',\n          data,\n          borderColor: '#4CAF50',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  private createFailureRateChart(labels: string[], data: number[]): void {\n    if (this.failureRateChart) {\n      this.failureRateChart.destroy();\n    }\n\n    this.failureRateChart = new Chart('failureRateChart', {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Change Failure Rate',\n          data,\n          borderColor: '#F44336',\n          tension: 0.1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 100\n          }\n        }\n      }\n    });\n  }\n\n  onNWBChange(nwb: string): void {\n    this.selectedNWB = nwb;\n    this.loadKPIs();\n  }\n}\n","<div class=\"kpi-overview\">\n  <div class=\"header\">\n    <div class=\"summary-metrics\" style=\"margin-bottom: 24px;\">\n      <h2>Summary</h2>\n      <div>Total reporting teams for selected period: <strong>{{ totalTeams }}</strong></div>\n    </div>\n  \n    <button (click)=\"showRawData = !showRawData\" style=\"margin-bottom: 10px;\">\n      {{ showRawData ? 'Hide' : 'Show' }} Raw KPI Data\n    </button>\n    <div *ngIf=\"showRawData\" style=\"max-height: 300px; overflow: auto; background: #f7f7f7; border: 1px solid #ccc; padding: 8px; margin-bottom: 20px;\">\n      <pre>{{ rawKpiJson }}</pre>\n    </div>\n    <h1>Engineering KPIs Overview</h1>\n    <div class=\"nwb-selector\">\n      <label for=\"nwb\">Network Bank:</label>\n      <select id=\"nwb\" [(ngModel)]=\"selectedNWB\" (change)=\"onNWBChange(selectedNWB)\">\n        <option value=\"RBRO\">RBRO</option>\n        <option value=\"RBBH\">RBBH</option>\n      </select>\n    </div>\n  </div>\n\n  <div class=\"charts-container\">\n    <div class=\"chart-wrapper\">\n      <h2>Deployment Frequency</h2>\n      <canvas id=\"deploymentChart\"></canvas>\n    </div>\n    <div class=\"chart-wrapper\">\n      <h2>Change Failure Rate</h2>\n      <canvas id=\"failureRateChart\"></canvas>\n    </div>\n  </div>\n\n  <div class=\"kpi-metrics\">\n    <div class=\"metric-card\" *ngFor=\"let kpi of kpis | slice:-1\">\n      <h3>Latest Metrics</h3>\n      <div class=\"metric\">\n        <span>CI/CD Pipeline Coverage:</span>\n        <span>{{kpi.cicdPipeline}}%</span>\n      </div>\n      <div class=\"metric\">\n        <span>Test Automation Coverage:</span>\n        <span>{{kpi.testAutomation}}%</span>\n      </div>\n      <div class=\"metric\">\n        <span>MTTR:</span>\n        <span>{{kpi.mttr}} hours</span>\n      </div>\n      <div class=\"metric\">\n        <span>DevOps Score:</span>\n        <span>{{kpi.devOpsScore}}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Trend Tables -->\n<div class=\"trend-tables\" style=\"margin-top: 32px;\">\n  <h2>Trends by Team & Product</h2>\n  <div class=\"trend-table-wrapper\" style=\"display: flex; flex-wrap: wrap; gap: 32px;\">\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Deployment Frequency</h3>\n      <input type=\"text\" [(ngModel)]=\"deploymentFilter\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setDeploymentSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setDeploymentSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setDeploymentSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of deploymentFrequencyTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Cycle Time</h3>\n      <input type=\"text\" [(ngModel)]=\"cycleFilter\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setCycleSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setCycleSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setCycleSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of cycleTimeTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>MTTR</h3>\n      <input type=\"text\" [(ngModel)]=\"mttrFilter\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setMttrSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setMttrSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setMttrSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of mttrTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"trend-table\" style=\"flex:1 1 300px; min-width: 260px;\">\n      <h3>Test Automation</h3>\n      <input type=\"text\" [(ngModel)]=\"testAutoFilter\" placeholder=\"Filter by team or product\" style=\"margin-bottom:6px;width:100%;\" />\n      <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n          <tr>\n            <th (click)=\"setTestAutoSort('team')\" style=\"cursor:pointer;\">Team</th>\n            <th (click)=\"setTestAutoSort('product')\" style=\"cursor:pointer;\">Product</th>\n            <th (click)=\"setTestAutoSort('value')\" style=\"cursor:pointer;\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of testAutomationTrend\">\n            <td>{{row.team}}</td>\n            <td>{{row.product}}</td>\n            <td>{{row.value}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<!-- All KPIs Table -->\n<div class=\"all-kpis-table\" style=\"margin-top: 40px;\">\n  <h2>All KPIs (Raw Data Table)</h2>\n  <div style=\"margin-bottom: 16px;\">\n    <label for=\"period\">Filter by Period (Year + Quarter):</label>\n    <select id=\"period\" [(ngModel)]=\"selectedPeriod\">\n      <option value=\"\">All Periods</option>\n      <option *ngFor=\"let period of periods\" [value]=\"period\">{{period}}</option>\n    </select>\n  </div>\n  <div style=\"overflow-x: auto;\">\n    <table style=\"width:100%; border-collapse: collapse;\">\n      <thead>\n        <tr style=\"background:#f0f0f0;\">\n          <th style=\"border:1px solid #ccc; padding:4px;\">NWB</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Team</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Tribe</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Product</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Quarter</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Year</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Deployment Frequency</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Cycle Time</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Change Failure Rate</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">MTTR</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">CI/CD Pipeline</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">Test Automation</th>\n          <th style=\"border:1px solid #ccc; padding:4px;\">DevOps Score</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let kpi of filteredKpis\">\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.nwb}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.team}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.tribe}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.product}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.quarter}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.year}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.deploymentFrequency}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.cycleTime}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.changeFailureRate}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.mttr}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.cicdPipeline}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.testAutomation}}</td>\n          <td style=\"border:1px solid #ccc; padding:4px;\">{{kpi.devOpsScore}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}